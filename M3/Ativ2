/*Faça um servidor web para responder requisições com diferentes status HTTP, os quais devem estar 
de acordo com os parâmetros enviados pelo placeholder nas requisições. Exemplo: a rota “/listar/50” 
vai retornar o HTTP 404; a rota /listar/10 vai retornar o HTTP 200 com alguma string.

Trabalhe esse código em seu IDE, suba ele para sua conta no GitHub e compartilhe o link desse projeto 
no campo ao lado para que outros desenvolvedores possam analisá-lo. */


const express = require('express');
const app = express();

app.get('/listar/:status', (req, res) => {
  const { status } = req.params;
  
  switch (status) {
    case '10':
      res.status(200).send('Status HTTP 200 - Requisição bem sucedida.');
      break;
    case '20':
      res.status(201).send('Status HTTP 201 - A requisição foi bem sucedida e um novo recurso foi criado como resultado.');
      break;
    case '30':
      res.status(204).send('Status HTTP 204 - A requisição foi bem sucedida, mas não há nenhum conteúdo a ser retornado.');
      break;
    case '40':
      res.status(400).send('Status HTTP 400 - A requisição é inválida ou não pode ser atendida.');
      break;
    case '50':
      res.status(404).send('Status HTTP 404 - O servidor não pôde encontrar o recurso solicitado.');
      break;
    case '60':
      res.status(500).send('Status HTTP 500 - O servidor encontrou um erro inesperado que impediu que ele atendesse a requisição.');
      break;
    default:
      res.status(400).send('Parâmetro inválido. Use um dos códigos de status HTTP suportados.');
      break;
  }
});

app.listen(8080, () => {
  console.log('Servidor rodando na porta 8080');
});
