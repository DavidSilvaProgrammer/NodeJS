/*Com base nos vídeos 1 e 2, explique como a web funciona a partir do ponto de vista do protocolo cliente servidor. 
Crie o começo de um projeto em node.js, usando o npm e informe os comandos utilizados.

Realize essa atividade no WORD ou no Bloco de Notas, suba esse arquivo para algum repositório e 
compartilhe o link no campo ao lado para que outros desenvolvedores possam analisá-lo. */

Quando um usuário digita um URL em um navegador da Web e pressiona "enter", o navegador envia uma 
solicitação HTTP (Hypertext Transfer Protocol) ao servidor para esse URL. O servidor responde com 
uma mensagem HTTP contendo os dados necessários para renderizar a página da Web solicitada no 
navegador. Esses dados podem incluir código HTML, CSS, JavaScript, imagens e outros tipos de 
conteúdo de mídia. O navegador usa esses dados para criar a página da Web e exibi-la ao usuário.

No entanto, quando um usuário acessa uma página da web que contém imagens e vídeos, o navegador
envia uma solicitação HTTP separada para cada recurso (como imagens e vídeos) necessário para
renderizar a página inteira. O servidor responde a cada solicitação HTTP com o conteúdo
arquivo correspondente, que pode incluir o arquivo de imagem ou vídeo solicitado. Então o navegador
usa esses arquivos de mídia para exibir as imagens e vídeos na página da web. É importante ter em mente
que, como cada recurso é uma solicitação HTTP separada, o carregamento de uma página da Web pode
pode ser atrasado se houver muitas funções ou se forem grandes.

Cria um diretório

mkdir projeto_novo
cd meu_projeto

Comando npm que serve como um assistente de configuração 
para a criação do arquivo "package.json".

npm init

Instalando o pacote lodash com o npm. O pacote Lodash é uma biblioteca
da JavaScript que fornece várias funções ao projeto, como manipulação
de arrays, objetos e outras estruturas.

Cria um arquivo JavaScript

touch index.js

Importando biblioteca Lodash e utilizando a função chunk para
dividir uma array em partes iguais e exibir o resultado por
meio do objeto console e do método log.

const _ = require('lodash');

console.log(_.chunk(['a', 'b', 'c', 'd'], 2));

Executando o arquivo index.js no Node.js

node index.js









